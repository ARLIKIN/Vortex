//Steam Modules
const axios = require('axios');
var HTMLParser = require('node-html-parser');

function suggest(data, callback) {
    var searchData = {
        "term": "",
        "tags": [],
        "untags": [],
        "category1": [],
        "category2": [],
        "category3": [],
        "special_categories": [],
        "onlySpecials": false,
        "maxprice": -1,
        "cc": "us",
        "deck_compatibility": [], //2=Verified & 3=Playable
        "os": [], //win, mac, linux
        "supportedlang": [],
        "vrsupport": [],
        "excluldeVRonlyTitles": false,
    }

    for (var key in data) {
        if (data.hasOwnProperty(key)) {
            if (searchData.hasOwnProperty(key)) {
                searchData[key] = data[key];
            }
        }
    }

    var url = 'https://store.steampowered.com/search/suggest?';
    for (var key in searchData) {
        if (searchData.hasOwnProperty(key)) {
            if (Array.isArray(searchData[key])) {
                if (searchData[key].length > 0) {
                    url += "&" + key + "=" + searchData[key].join(",");
                }
            } else if (typeof searchData[key] == 'string') {
                if (searchData[key].length > 0) {
                    searchData[key] = searchData[key].replace(/ /g, '+');
                    url += "&" + key + "=" + searchData[key]
                }
            } else if (key == "onlySpecials") {
                if (searchData[key]) {
                    url += "&" + key + "=1";
                }
            } else if (key == 'maxprice') {
                if (searchData[key] > 0) {
                    url += "&" + key + "=" + searchData[key];
                } else if (searchData[key] == 0) {
                    url += "&" + key + "=free";
                }
            } else if (key == 'excluldeVRonlyTitles') {
                if (searchData[key] == true) {
                    url += "&unvrsupport=401";
                }
            }
        }
    }
    axios.get(url)
        .then(response => {

            const root = HTMLParser.parse(response.data);
            searchFinalData = [];
            root.getElementsByTagName('li').forEach(element => {
                searchFinalData.push(element.rawText);
            });
            callback(searchFinalData);
        })
        .catch(error => {
            console.log(error);
        });
}

function getByID(getAppData, callback) {
    var lookup = {
        "appid": getAppData.appid,
        "cc": getAppData.cc,
    }
    console.log(lookup);
    url = 'https://store.steampowered.com/api/appdetails?appids=' + lookup.appid + '&cc=' + lookup.cc;

    axios.get(url)
    .then(response => {
        if (response.data[lookup.appid].success) {
            callback(response.data[lookup.appid].data);
        } else {
            callback(null);
        }
    })
    .catch(error => {
        console.log(error);
    });
}

function search(data, callback) {
    var searchData = {
        "onlyGames": true,
        "term": "",
        "tags": [],
        "untags": [],
        "category1": [],
        "category2": [],
        "category3": [],
        "special_categories": [],
        "onlySpecials": false,
        "maxprice": -1,
        "cc": "",
        "deck_compatibility": [], //2=Verified & 3=Playable
        "os": [], //win, mac, linux
        "supportedlang": [],
        "vrsupport": [],
        "excluldeVRonlyTitles": false,
        "page": 1,
    }

    for (var key in data) {
        if (data.hasOwnProperty(key)) {
            if (searchData.hasOwnProperty(key)) {
                searchData[key] = data[key];
            }
        }
    }

    var url = 'https://store.steampowered.com/search/results?';
    for (var key in searchData) {
        if (searchData.hasOwnProperty(key)) {
            if (Array.isArray(searchData[key])) {
                if (searchData[key].length > 0) {
                    url += "&" + key + "=" + searchData[key].join(",");
                }
            } else if (typeof searchData[key] == 'string') {
                if (searchData[key].length > 0) {
                    searchData[key] = searchData[key].replace(/ /g, '+');
                    url += "&" + key + "=" + searchData[key]
                }
            } else if (key == "onlySpecials") {
                if (searchData[key]) {
                    url += "&" + key + "=1";
                }
            } else if (key == 'page') {
                url += "&page=" + searchData[key];
            } else if (key == 'maxprice') {
                if (searchData[key] > 0) {
                    url += "&" + key + "=" + searchData[key];
                } else if (searchData[key] == 0) {
                    url += "&" + key + "=free";
                }
            } else if (key == 'excluldeVRonlyTitles') {
                if (searchData[key] == true) {
                    url += "&unvrsupport=401";
                }
            }
        }
    }

    axios.get(url)
        .then(response => {
            const root = HTMLParser.parse(response.data);
            searchFinalData = [];
            root.getElementsByTagName('a').forEach(element => {

                firstBit = element.rawAttrs.split('href="')[1].split('"')[0].split('https://store.steampowered.com/app/')[1]
                if (element.querySelector('.title') !== null && firstBit !== undefined) {
                    searchFinalData.push({
                        "title": element.querySelector('.title').childNodes[0].rawText,
                        "appid": firstBit.split('/')[0],
                        "url": "https://store.steampowered.com/app/" + firstBit.split('/')[0],
                        "headerImage": "https://cdn.cloudflare.steamstatic.com/steam/apps/" + firstBit.split('/')[0] + "/header.jpg",
                        "smallImage": "https://cdn.cloudflare.steamstatic.com/steam/apps/" + firstBit.split('/')[0] + "/capsule_184x69.jpg"
                    });
                }
            });
            callback(searchFinalData);
            //console.log(searchFinalData);
        })
        .catch(error => {
            console.log(error);
        });
}


/*
steamGetApp.getByID({
    "appid": "381210",
    "cc": "uk",
}, function(data) {
    console.log(data.price_overview.final_formatted);
})*/

module.exports = { search, getByID, suggest };